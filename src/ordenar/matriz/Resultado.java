/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordenar.matriz;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class Resultado extends javax.swing.JFrame {

    /**
     * Creates new form Resultado
     */
    public Resultado() {
        initComponents();
        ordenarMatriz();
        mostrarTabla();
        mostrarSuma();
        suma.setTransferHandler(null);
    }
    public int[][] mat2=GUI.matriz.clone();
    int m=GUI.m;
    int n=GUI.n;
    
    /**
     * Elimina los elementos de la tabla actual y muestra una nueva con los
     * elementos de la matriz
     */
    public void mostrarTabla(){
        matrizTabla.removeAll();
        DefaultTableModel model = (DefaultTableModel) matrizTabla.getModel();
        for (int i = 0; i < n; i++) {
            model.addColumn(i+1);
        }
        for (int i = 0; i < m; i++) {
            model.addRow(new Object[n-1]);
        }
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                model.setValueAt(mat2[i][j], i, j);
            }
        }
    }
    
    /**
     * Este método ordena la matriz en forma ascendente, de izquierda a derecha
     * y de arriba a abajo
     */
    public void ordenarMatriz(){
        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                int[] posMenor =buscarPosMenor(i, j);
                if(i!=posMenor[0] || j!=posMenor[1]){
                    intercambiarPosiciones(i, j, posMenor[0], posMenor[1]);
                }
            }
        }
    }
    
    /**
     * Este método busca la posición del elemento menor de la matriz, comenzando
     * a buscar desde la fila y columna dada y desde ahí, hacia la derecha de la
     * fila inicial y hacia abajo en todas las filas siguientes
     * @param filaInicial La fila inicial desde comienza a buscar el número menor
     * @param columnaInicial La columna inicial donde comienza a buscar el menor
     * número
     * @return Devuelve un arreglo(vector) con las posiciones [fila, columna]
     * del elemento menor
     */
    int[] buscarPosMenor(int filaInicial, int columnaInicial){
        int[] posMenor = {filaInicial, columnaInicial};
        for (int i = columnaInicial+1; i < n; i++) {
            if(mat2[posMenor[0]][posMenor[1]]>mat2[filaInicial][i]){
                posMenor[1]=i;
            }
        }
        for (int i = filaInicial+1; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if(mat2[posMenor[0]][posMenor[1]]>mat2[i][j]){
                    posMenor[0]=i;
                    posMenor[1]=j;
                }
            }
        }
        return(posMenor);
    }
    
    /**
     * Este método intercambia los elementos en dos posiciones dadas
     * @param fila1 La fila donde se encuentra el primer elemento
     * @param columna1 La columna donde se encuentra el primer elemento
     * @param fila2 La fila donde se encuentra el segundo elemento
     * @param columna2 La columna donde se encuentra el segundo elemento
     */
    void intercambiarPosiciones(int fila1, int columna1, int fila2, int columna2){
        int aux;
        aux=mat2[fila1][columna1];
        mat2[fila1][columna1]=mat2[fila2][columna2];
        mat2[fila2][columna2]=aux;
        
    }
    void mostrarSuma(){
        suma.setText("La suma de las filas y columnas es:\n");
        for (int i = 0; i < m; i++) {
            int sumaFila=0;
            for (int j = 0; j < n; j++) {
                sumaFila += mat2[i][j];
            }
            suma.append("\nFila "+(i+1)+": "+sumaFila);
        }
        suma.append("\n");
        for (int j = 0; j < n; j++) {
            int sumaColumna=0;
            for (int i = 0; i < m; i++) {
                sumaColumna += mat2[i][j];
            }
            suma.append("\nColumna "+(j+1)+": "+sumaColumna);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        matrizTabla = new javax.swing.JTable();
        cerrar = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        suma = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        matrizTabla.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        matrizTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        matrizTabla.setEnabled(false);
        jScrollPane1.setViewportView(matrizTabla);

        cerrar.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        cerrar.setText("Cerrar");
        cerrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cerrarMouseClicked(evt);
            }
        });

        suma.setColumns(20);
        suma.setRows(5);
        suma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sumaKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(suma);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 151, Short.MAX_VALUE)
                        .addComponent(cerrar))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cerrar))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cerrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cerrarMouseClicked
        this.setVisible(false);
        this.dispose();
    }//GEN-LAST:event_cerrarMouseClicked

    private void sumaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sumaKeyTyped
        evt.consume();
    }//GEN-LAST:event_sumaKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Resultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Resultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Resultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Resultado.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Resultado().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cerrar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable matrizTabla;
    private javax.swing.JTextArea suma;
    // End of variables declaration//GEN-END:variables
}
