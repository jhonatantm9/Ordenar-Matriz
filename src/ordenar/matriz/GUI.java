/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ordenar.matriz;

import java.awt.event.KeyEvent;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author usuario
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        ordenarB.setVisible(false);
        filasUs.setTransferHandler(null);
        columnasUs.setTransferHandler(null);
        suma.setTransferHandler(null);
    }
    public static int[][] matriz = new int[10][10];
    public static int m;
    public static int n;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        matrizTabla = new javax.swing.JTable();
        ordenarB = new javax.swing.JButton();
        filasUs = new javax.swing.JTextField();
        columnasUs = new javax.swing.JTextField();
        crear = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        suma = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        matrizTabla.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        matrizTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        matrizTabla.setEnabled(false);
        jScrollPane1.setViewportView(matrizTabla);

        ordenarB.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        ordenarB.setText("Ordenar");
        ordenarB.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ordenarBMouseClicked(evt);
            }
        });

        filasUs.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        filasUs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                filasUsKeyTyped(evt);
            }
        });

        columnasUs.setFont(new java.awt.Font("Cambria Math", 0, 12)); // NOI18N
        columnasUs.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                columnasUsKeyTyped(evt);
            }
        });

        crear.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        crear.setText("Crear Matríz");
        crear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                crearMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        jLabel1.setText("Ingrese el número de filas");

        jLabel2.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        jLabel2.setText("Ingrese el número de columnas");

        jLabel3.setFont(new java.awt.Font("Constantia", 0, 12)); // NOI18N
        jLabel3.setText("Ingrese el número de filas y de columnas que tendrá la matriz. Luego presione Crear Matríz para crear una matríz con números aleatorios");

        jLabel5.setFont(new java.awt.Font("Lucida Fax", 1, 18)); // NOI18N
        jLabel5.setText("Crear y Ordenar Matrices Aleatorias");

        suma.setEditable(false);
        suma.setColumns(20);
        suma.setRows(5);
        suma.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                sumaKeyTyped(evt);
            }
        });
        jScrollPane3.setViewportView(suma);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(filasUs, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(columnasUs, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(crear)
                                .addGap(51, 51, 51)
                                .addComponent(ordenarB)))
                        .addContainerGap(300, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(31, 31, 31)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 256, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(20, 20, 20))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel3)))
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(layout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(jLabel5)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filasUs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(columnasUs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(crear)
                    .addComponent(ordenarB))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 333, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ordenarBMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ordenarBMouseClicked
        Resultado tabla =new Resultado();
        //sitúa la tabla un poco más abajo a la derecha de la primera ventana
        tabla.setLocation(this.getX()+10, this.getY()+10);
        tabla.setVisible(true);
        
    }//GEN-LAST:event_ordenarBMouseClicked

    private void crearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_crearMouseClicked
        if(!(filasUs.getText().equals("")||columnasUs.getText().equals(""))){
            matrizTabla.removeAll();
            ordenarB.setVisible(true);
            int m = Integer.parseInt(filasUs.getText());
            int n = Integer.parseInt(columnasUs.getText());
            int[][] matriz =new int[m][n];
            Random rdm =new Random();
            //el ciclo llena el vector con números aleatorios
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    matriz[i][j]= rdm.nextInt(101);
                }
            }
            //Crea un nuevo defaultTableModel y lo añade a la tabla
            DefaultTableModel model = new DefaultTableModel();
            matrizTabla.setModel(model);
            //llena la tabla con los datos de la matriz
            for (int i = 0; i < n; i++) {
                model.addColumn(i+1);
            }
            for (int i = 0; i < m; i++) {
                model.addRow(new Object[n-1]);
            }
            for (int i = 0; i < m; i++) {
                for (int j = 0; j < n; j++) {
                    model.setValueAt(matriz[i][j], i, j);
                }
            }
            this.matriz=matriz;
            this.m = m;
            this.n = n;

            //Suma cada fila y columna de la matriz y añade el resultado al textArea
            suma.setText("La suma de las filas y columnas es:\n");
            for (int i = 0; i < m; i++) {
                int sumaFila=0;
                for (int j = 0; j < n; j++) {
                    sumaFila += matriz[i][j];
                }
                suma.append("\nFila "+(i+1)+": "+sumaFila);
            }
            suma.append("\n");
            for (int j = 0; j < n; j++) {
                int sumaColumna=0;
                for (int i = 0; i < m; i++) {
                    sumaColumna += matriz[i][j];
                }
                suma.append("\nColumna "+(j+1)+": "+sumaColumna);
            }
        }
        else{//error, al menos uno de los textFields está vacío
            JOptionPane.showMessageDialog(this, "Por favor ingrese el número de filas y columnas");
        }
    }//GEN-LAST:event_crearMouseClicked

    private void filasUsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_filasUsKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_filasUsKeyTyped

    private void columnasUsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_columnasUsKeyTyped
        char c = evt.getKeyChar();
        if (!(Character.isDigit(c) || c == KeyEvent.VK_BACK_SPACE || c == KeyEvent.VK_DELETE)) {
            evt.consume();
        }
    }//GEN-LAST:event_columnasUsKeyTyped

    private void sumaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sumaKeyTyped
        evt.consume();
    }//GEN-LAST:event_sumaKeyTyped

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField columnasUs;
    private javax.swing.JButton crear;
    private javax.swing.JTextField filasUs;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable matrizTabla;
    private javax.swing.JButton ordenarB;
    private javax.swing.JTextArea suma;
    // End of variables declaration//GEN-END:variables
}
